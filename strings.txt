/lib64/ld-linux-x86-64.so.2
Eiyb
libasan.so.1
__gmon_start__
_Jv_RegisterClasses
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_init
__asan_init_v3
_fini
__asan_stack_malloc_1
__asan_option_detect_stack_use_after_return
malloc
__asan_report_store_n
memset
__asan_report_load8
free
__asan_stack_malloc_2
__asan_handle_no_return
accept
__asan_unregister_globals
__asan_register_globals
getline
strcmp
write
libc.so.6
socket
exit
htonl
htons
perror
puts
listen
printf
bind
close
fdopen
__libc_start_main
_edata
__bss_start
_end
GLIBC_2.2.5
%z6 
%r6 
%j6 
%b6 
%Z6 
%R6 
%J6 
%B6 
%:6 
%26 
%*6 
%"6 
fffff.
=-? 
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
%p$ 
[]A\A]A^A_
1 32 8 8 response 
Respuesta incorrecta: %s
termino yay!
3 32 4 7 addrlen 96 16 8 servaddr 160 16 3 cli 
socket creation failed...
Socket successfully created..
socket bind failed...
Socket successfully binded..
Listen failed...
Server listening..
server acccept failed...
server acccept the client...
levels
server.c
*.LC5
*.LC10
*.LC2
*.LC1
*.LC9
*.LC3
*.LC12
*.LC7
*.LC6
*.LC8
*.LC11
Bienvenidos al TP3 y felicitaciones, ya resolvieron el primer acertijo.
En este TP deber
n finalizar el juego que ya comenzaron resolviendo los desaf
os de cada nivel.Adem
s tendr
n que investigar otras preguntas para responder durante la defensa.El desaf
o final consiste en crear un programa que se comporte igual que yo, es decir, que provea los mismos desaf
os y que sea necesario hacer lo mismo para resolverlos. No basta con esperar la respuesta.Adem
s, deber
n implementar otro programa para comunicarse conmigo.
Deber
n estar atentos a los easter eggs.
Para verificar que sus respuestas tienen el formato correcto respondan a este desaf
o con la palabra 'entendido\n'
mo descubrieron el protocolo, la direcci
n y el puerto para conectarse?
entendido
The Wire S1E5
5295 888 6288
 diferencias hay entre TCP y UDP y en qu
 casos conviene usar cada uno?
itba
https://ibb.co/tc0Hb6w
El puerto que usaron para conectarse al server es el mismo que usan para mandar las respuestas? 
Por qu
M4GFKZ289aku
EBADF..
fk3wfLCm3QvS
write
til abstracci
n es utilizada para comunicarse con sockets? 
se puede utilizar read(2) y write(2) para operar?
fk3wfLCm3QvS
respuesta = strings:277
mo garantiza TCP que los paquetes llegan en orden y no se pierden?
too_easy
.data .bss .comment ? .shstrtab .symtab .strtab
Un servidor suele crear un nuevo proceso o thread para atender las conexiones entrantes. 
 conviene m
.RUN_ME
Filter error
mo se puede implementar un servidor que atienda muchas conexiones sin usar procesos ni threads?
K5n2UFfpFMUN
La respuesta es BUmyYq5XxXGt
 aplicaciones se pueden utilizar para ver el tr
fico por la red?
BUmyYq5XxXGt
Latexme
\mathrm{d}y = u^v{\cdot}(v'{\cdot}\ln{(u)}+v{\cdot}\frac{u'}{u})
entonces
y = 
sockets es un mecanismo de IPC. 
 es m
s eficiente entre sockets y pipes?
quine
les son las caracter
sticas del protocolo SCTP?
chin_chu_lan_cha
b gdbme y encontr
 el valor m
gico
 es un RFC?
gdb_rules
Fue divertido?
normal
------------- DESAFIO -------------
----- PREGUNTA PARA INVESTIGAR -----
*.LC13
levels.c
*.LC36
*.LC25
*.LC22
*.LC27
*.LC31
*.LC16
*.LC6
*.LC12
*.LC32
*.LC5
*.LC10
*.LC1
*.LC28
*.LC15
*.LC26
*.LC4
*.LC2
*.LC0
*.LC7
*.LC37
*.LC38
*.LC11
*.LC33
*.LC21
*.LC29
*.LC19
*.LC17
*.LC23
*.LC30
*.LC3
*.LC14
*.LC9
*.LC8
*.LC34
*.LC20
*.LC18
*.LC35
*.LC24
;*3$"
GCC: (Debian 4.9.2-10+deb8u1) 4.9.2
GCC: (Debian 4.8.4-1) 4.8.4
../../../../src/libsanitizer/sanitizer_common
../../../../src/libsanitizer/asan
sanitizer_stacktrace.h
sanitizer_internal_defs.h
sanitizer_libc.h
sanitizer_common.h
asan_flags.h
asan_internal.h
asan_interface_internal.h
asan_preinit.cc
kCacheLineSize
StackTrace
mac_ignore_invalid_free
replace_intrin
kAsanContiguousContainerOOBMagic
_ZN11__sanitizer10StackTrace6UnwindEmmmmmb
_ZN6__asan28asan_flags_dont_use_directlyE
use_sigaltstack
debug
top_frame_bp
kAsanHeapFreeMagic
PopStackFrames
long long unsigned int
kPthreadDestructorIterations
exitcode
unmap_shadow_on_exit
_ZN11__sanitizer10StackTrace10PrintStackEPKmmPFbPKvPciE
atexit
abort_on_error
uptr
kAsanStackAfterReturnMagic
long long int
allow_reexec
allow_user_poisoning
kMaxSummaryLength
kAsanUserPoisonedMemoryMagic
kStderrFd
kRetiredStackFrameMagic
_ZN11__sanitizer10StackTrace15LocatePcInTraceEm
GetCurrentPc
CopyFrom
handle_segv
check_malloc_usable_size
kAsanInitializationOrderMagic
_ZN11__sanitizer10StackTrace24GetPreviousInstructionPcEm
__sanitizer
print_full_thread_history
report_globals
FastUnwindStack
_ZN11__sanitizer10StackTrace8CopyFromEPKmm
short unsigned int
quarantine_size
check_initialization_order
coverage
kInvalidFd
SymbolizeCallback
bool
kWordSizeInBits
poison_heap
disable_core
sizetype
print_legend
GetPreviousInstructionPc
GNU C++ 4.9.2 -mtune=generic -march=x86-64 -g -O2 -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden
SlowUnwindStack
alloc_dealloc_mismatch
uar_stack_size_log
_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmmm
kAsanStackUseAfterScopeMagic
kAsanInternalHeapMagic
_ZN11__sanitizer10StackTrace17WillUseFastUnwindEb
redzone
kAsanHeapRightRedzoneMagic
unsigned char
max_malloc_fill_size
short int
allow_user_segv_handler
kStdinFd
_ZN11__sanitizer10StackTrace12GetCurrentPcEv
PrintStack
kAsanStackLeftRedzoneMagic
kCurrentStackFrameMagic
print_stats
__local_asan_preinit
../../../../src/libsanitizer/asan/asan_preinit.cc
replace_str
kAsanStackMidRedzoneMagic
kStackTraceMax
Flags
kStdoutFd
trace
strict_init_order
kAsanStackRightRedzoneMagic
detect_stack_use_after_return
sleep_before_dying
strict_memcmp
kMaxPathLength
kAsanHeapLeftRedzoneMagic
asan_flags_dont_use_directly
LocatePcInTrace
kWordSize
fd_t
kAsanGlobalRedzoneMagic
WillUseFastUnwind
malloc_fill_byte
/build/gcc-4.9-4.9.2/build/x86_64-linux-gnu/libsanitizer/asan
kAsanStackPartialRedzoneMagic
_ZN11__sanitizer10StackTrace14PopStackFramesEm
__asan
poison_partial
_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm
.symtab
.strtab
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.preinit_array
.init_array
.fini_array
.jcr
.dynamic
.got
.got.plt
.data
.bss
.comment
.debug_aranges
.debug_info
.debug_abbrev
.debug_line
.debug_str
crtstuff.c
__JCR_LIST__
deregister_tm_clones
register_tm_clones
__do_global_dtors_aux
completed.6670
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
asan_preinit.cc
server.c
levels
loadLevels
_GLOBAL__sub_D_00099_0_func
_GLOBAL__sub_I_00099_1_func
levels.c
paraInvestigar
desafio
_GLOBAL__sub_D_00099_0_level0
_GLOBAL__sub_I_00099_1_level0
__FRAME_END__
__JCR_END__
_GLOBAL_OFFSET_TABLE_
__init_array_end
__init_array_start
_DYNAMIC
data_start
printf@@GLIBC_2.2.5
__libc_csu_fini
level2
_start
close@@GLIBC_2.2.5
__asan_init_v3
level10
__asan_stack_malloc_2
getline
__asan_report_load8
__gmon_start__
_Jv_RegisterClasses
puts@@GLIBC_2.2.5
__asan_stack_malloc_1
htons@@GLIBC_2.2.5
exit@@GLIBC_2.2.5
_fini
__asan_report_store_n
level6
__libc_start_main@@GLIBC_2.2.5
malloc
__local_asan_preinit
_ITM_deregisterTMCloneTable
level3
_IO_stdin_used
_ITM_registerTMCloneTable
__data_start
level11
__asan_handle_no_return
listen@@GLIBC_2.2.5
__asan_option_detect_stack_use_after_return
fdopen@@GLIBC_2.2.5
level7
write
func
__TMC_END__
__dso_handle
level8
__libc_csu_init
level0
socket@@GLIBC_2.2.5
memset
__bss_start
level4
level9
_end
__asan_unregister_globals
level1
strcmp
__asan_register_globals
bind@@GLIBC_2.2.5
accept
free
htonl@@GLIBC_2.2.5
perror@@GLIBC_2.2.5
_edata
level5
main
_init
